General TODO:

- code Internet class (checks connection and actual time):
  * implement getting UTC time - get http header and parse "Date: " parameter
  * find out why CURLOPT_WRITEFUNCTION doesn't mute output to stdout
  
- code OAuth2 class:
  * Refactorization?: making request move to new method
  * Refactorization: use Internet class for making requests

- code TaskSynchronizer class:
  * implement callbacks (information about update - failed or done)

- class TaskListManager:
  * getting TaskSynchronizer should be public or should exist method which
    forwards extra data to synchronizer (simply wrapper). Why? Please read
    additional info in TaskSynchronizer.h file above ProvideExtraData() method
    - Refactorization: check other cloud services and consider whether
      TaskSynchronizer could have methods like IsAuthorizationNeeded(),
      Authorize(BString code), etc instead ProvideExtraData(void*) 

- write Makefile or something similar; application should be linked with AppEngine,
  PluginEngine and Utility modules. Plugins should be linked with the same modules
  plus its own Utilities. Don't forget about linking ExternalLibs module and libcurl.

- Refactorization:
  * leave standard serialization in AppEngine and let plugins serialize
    only user data (extract adequate code to AppEngine and PluginEngine)
  * make Task* classes code cleaner (frienship declarations) and extract
    task synchronization to adequate AppEngine class, plugins should
    communicate via this class (get directly needed data)
  * checkout OAuth2 class (in TODO.txt)
  * make cache for time as RFC3339 timestamp and extract converting methods
  * Google Tasks plugin: extract repeating code to new methods; check FIXME and TODO
