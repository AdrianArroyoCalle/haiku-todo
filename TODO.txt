General TODO:

- code Internet class (checks connection and actual time):
  * implement getting UTC time
  * find out why CURLOPT_WRITEFUNCTION doesn't mute output to stdout
  
- code Task class:
  * update fLastLocalChange variable
  * request synchronization every time when something changes
  
- code TaskList class:
  * implement synchronization
  
- code OAuth2 class:
  * create header file
  * implement methods

- code TaskSynchronizer class:
  * implement callbacks (information about update - failed or done)
  
- code plugin for Google Tasks:
  * code TimeTfc3339 class
  * inherit TaskSynchronizer class:
    + create header file
    + implement methods
  * inherit TaskSerializer class (hm, use default serializer?):
    + create header file
    + implement methods
  * inherit SynchronizationPlugin class:
    + create header file
    + implement methods
- consider how to give read and write access to TaskSerializer and
  TaskSynchronizer derived classes (in plugin)
  
- Refactorization:
  * leave standard serialization in AppEngine and let plugins serialize
    only user data (extract adequate code to AppEngine and PluginEngine)
  * make Task* classes code cleaner (frienship declarations) and extract
    task synchronization to adequate AppEngine class, plugins should
    communicate via this class (get directly needed data)
